(()=>{"use strict";const e="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/l1wyQq7Jrf2t34Tkma8G/likes";class t{constructor(){this.query="https://www.themealdb.com/api/json/v1/1/categories.php"}getRecipies=async()=>{const e=await fetch(`${this.query}`);return this.results=await e.json(),this.results}}const n=document.querySelector(".cards"),s=document.querySelector(".pagination-container"),i=(document.querySelector(".likes"),document.querySelector(".nav-items")),a=(e,t)=>`<button class="pagination" data-goto = ${"prev"===t?e-1:e+1} >\n    <span>Page ${"prev"===t?e-1:e+1}</span>\n${"prev"===t?'<svg xmlns="http://www.w3.org/2000/svg" height="15" width="20" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19l-7-7 7-7m8 14l-7-7 7-7" />\n</svg>':'<svg xmlns="http://www.w3.org/2000/svg" height="15" width="20" class="right" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7"/></svg>'}\n\n      </button>`,o=async(t,n)=>{n||await(async t=>(await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).status)({item_id:t}),((e,t)=>{const n=e?'<svg xmlns="http://www.w3.org/2000/svg" height="30" width="30" class="h-6 w-6 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />\n                </svg>':'<svg xmlns="http://www.w3.org/2000/svg" height="30" width="30" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">\n  <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" />\n</svg>';document.querySelector(`#like${t}`).innerHTML=n})(n,t)},r=(e,t,r=1,l=6)=>{(e=>{const t=`<li><a href="#">Recipes (${e})</a></li>\n            <li>Hotels</li>\n            <li>Resturants</li>`;i.innerHTML=t})(e.length);const c=(r-1)*l,d=r*l;e.slice(c,d).forEach((e=>{const s=t.filter((t=>e.idCategory===t.item_id));e.likes=void 0===s||void 0===s[0]?0:s[0].likes,(e=>{const t=`<div class="card" data-id = "${e.idCategory}">\n            <div class="card-image">\n              <img src="${e.strCategoryThumb}" alt="recipe image">\n            </div>\n            <div class="card-text">\n              <div class="card__title">${e.strCategory}</div>\n              <div class="like-btn" data-id="${e.idCategory}" data-liked="false" id="like${e.idCategory}">\n                <svg xmlns="http://www.w3.org/2000/svg" height="30" width="30" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />\n                </svg>\n              </div>\n            </div>\n            <div class="likes"> ${e.likes} likes </div>\n            <div class="btn-container">\n              <button class="btn seePop-btn">Comments</button>\n            </div>\n          </div>`;n.innerHTML+=t})(e)})),((e,t,n)=>{const i=Math.ceil(t/n);let o;1===e&&i>1?o=a(e,"next"):e<i?o=`${a(e,"prev")}${a(e,"next")}`:e===i&&i>1&&(o=a(e,"prev")),s.insertAdjacentHTML("afterbegin",o)})(r,e.length,l),(()=>{const e=document.getElementsByClassName("like-btn");for(let t=0;t<=e.length-1;t+=1)e[t].addEventListener("click",(()=>{const n=e[t].getAttribute("data-id"),s="true"===e[t].getAttribute("data-liked");s?e[t].setAttribute("data-liked","false"):e[t].setAttribute("data-liked","true"),o(n,s)}))})()},l=document.querySelector("#popup"),c=document.querySelector("#header"),d=document.querySelector("#main"),m=document.querySelector("#footer"),p=()=>{c.style.display="block",d.style.display="block",m.style.display="block",l.style.display="none"},u=async e=>{const t=await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/l1wyQq7Jrf2t34Tkma8G/comments?item_id=${e}`);return await t.text()},v=async e=>{const t=await u(e.idCategory),n=JSON.parse(t),s=(e=>e.length)(n),i=document.querySelector("#popup");i.className="comments-popup",i.innerHTML=`<div class="recipe">\n                           <button type="button" class="close-btn clickable">&times;</button>\n                           <div class="recipe__image">\n                             <img src="${e.strCategoryThumb}" alt="recipe image">\n                           </div>\n                           <div class="recipe__text">\n                             <div class="recipe-title">\n                               <h2>${e.strCategory}</h2>\n                             </div>\n                             <div class="details">\n                              <p>${e.strCategoryDescription}</p>\n                             </div>\n                           </div>\n                           <div class="comments">\n                             <div class="comments__title">\n                               <h2>Comments <span>(${s||0})</span></h2>\n                             </div>\n                             <ul class="comments-list">${n.map((e=>`<li class="comment-item">\n    <span class="creation-date">${e.creation_date}</span>\n    <span class="username"> ${e.username}:</span>\n    <span  class="comment-msg"> ${e.comment}</span></li>`)).join("")}\n                             </ul> \n                           </div>\n                           <div class="add-comment">\n                             <h2 class="title">Add a comment</h2>\n                             <div class="new-comment">\n                               <form class="form">\n                                 <input class="input-name" type="text" placeholder="Your Name" required>\n                                 <textarea name="add-comment" id="new-comment" class="comment-textarea" cols="30" rows="4" placeholder="Your Comment" required></textarea>\n                                 <button type="submit" class="add-comment-btn clickable">Add Comment</button>\n                               </form>\n                             </div>\n                           </div>\n                         </div>`},h={},g=async()=>{h.recipe=new t,n.insertAdjacentHTML("afterbegin",'\n          <div class="loader">\n          <svg xmlns="http://www.w3.org/2000/svg" height="45" width="45" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />\n          </svg>\n          </div>\n                  '),await h.recipe.getRecipies(),h.likes=await(async()=>{const t=await fetch(e);return await t.json()})(),(()=>{const e=document.querySelector(".loader");e&&e.parentElement.removeChild(e)})(),r(h.recipe.results.categories,h.likes),v(h.recipe.results.categories),(async()=>{const e=document.querySelectorAll(".btn"),t=await h.recipe.results.categories;e.forEach((e=>{e.addEventListener("click",(async()=>{c.style.display="none",d.style.display="none",m.style.display="none",l.style.display="block";const n=e.parentNode.parentNode.dataset.id;t.find((e=>e.idCategory===n)),await v(t.find((e=>e.idCategory===n))),document.querySelector(".close-btn").addEventListener("click",p);const s=document.querySelector(".form");s.addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector(".input-name"),i=document.querySelector(".comment-textarea");(async e=>{(await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/l1wyQq7Jrf2t34Tkma8G/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).text()})({item_id:n,username:t.value,comment:i.value}),u(n),s.reset()}))}))}))})()};window.addEventListener("load",(async()=>{g()})),s.addEventListener("click",(e=>{const t=e.target.closest(".pagination");if(t){const e=parseInt(t.dataset.goto,10);n.innerHTML="",s.innerHTML="",r(h.recipe.results.categories,h.likes,e)}}))})();